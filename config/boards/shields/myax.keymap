
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                    bindings = <
        &kp ESC     &kp N1      &kp N2     &kp N3     &kp N4     &kp N5     &kp N6     &kp N7     &kp N8     &kp N9     &kp N0      &kp BSPC
        &kp TAB     &kp Q       &kp W      &kp E      &kp R      &kp T      &kp Y      &kp U      &kp I      &kp O      &kp P       &kp BSLH
        &kp LCTRL   &kp A       &kp S      &kp D      &kp F      &kp G      &kp H      &kp J      &kp K      &kp L      &kp SCLN    &kp SQT
        &lt 1 LSHFT  &kp Z       &kp X      &kp C      &kp V      &kp B      &kp N      &kp M      &kp COMMA  &kp DOT    &kp SLASH   &kp ENTER
        &kp LGUI    &kp LEFT    &kp RIGHT  &kp LALT   &mo 2      &kp MINUS  &kp EQUAL  &kp SPACE  &kp UP     &kp DOWN   &kp LBKT    &kp RBKT
                        >;
                };
                shift_layer {
                            bindings = <
        &trans      &kp EXCL    &kp AT     &kp HASH   &kp DLLR   &kp PERC   &kp CARET  &kp AMPS   &kp ASTERK &kp LPAR   &kp RPAR    &trans
        &trans      &trans      &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans      &kp PIPE
        &trans      &trans      &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &kp COLON   &kp DQT
        &trans      &trans      &trans     &trans     &trans     &trans     &trans     &trans     &kp LT     &kp GT     &kp QMARK   &trans
        &trans      &trans      &trans     &trans     &trans     &kp UNDERSCORE &kp PLUS &trans     &trans     &trans     &kp LCBR    &kp RCBR
                        >;
                };
                fn_layer {
                            b1indings = <
        &trans      &kp F1      &kp F2     &kp F3     &kp F4     &trans     &trans     &kp F8     &kp F9     &kp F10    &kp F11     &kp F12
        &trans      &trans      &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans      &trans
        &trans      &trans      &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans      &trans
        &trans      &trans      &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans      &trans
        &trans      &trans      &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans      &trans
                        >;
                };
        };
};
